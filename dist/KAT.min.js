/**
Copyright (c) 2014-15 by the KWARC Group (http://kwarc.info)

KAT is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

KAT is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with KAT.  If not, see <http://www.gnu.org/licenses/>
*/

var KAT={};KAT.rdf={},KAT.rdf.kat_namespace="https://github.com/KWARC/KAT/",KAT.rdf.rdf_namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#",KAT.rdf.create=function(a){return document.createElementNS(KAT.rdf.rdf_namespace,a)},KAT.rdf.attr=function(a,b,c){return $(a).get(0).setAttribute(b,c),a},KAT.rdf.resolveWithNameSpace=function(a,b){var c=a.split(":");if(2==c.length){var d=$(b).find("annotation").eq(0);return d.attr("xmlns:"+c[0])+c[1]}return a},KAT.rdf.buildNameSpace=function(a,b){for(var c,d,e,f=$(b).find("annotation").get(0)||$(b).get(0),g=0;g<f.attributes.length;g++)if(c=f.attributes[g],"xmlns"==c.name.substring(0,"xmlns".length)&&(d=c.name.split(":")[1]||"",a.startsWith(c.value)))return e=a.substring(c.value.length),""!==d?d+":"+e:e;return a},KAT.rdf.findById=function(a,b){return jQuery("rdf\\:Description",a).filter(function(){return jQuery(this).attr("rdf:nodeID")===b})},KAT.model={},KAT.model.nameRegExS="(?:\\w|\\d|\\-|\\_|\\+)+",KAT.model.nameRegEx=new RegExp("^"+KAT.model.nameRegExS+"$"),KAT.model.nameRegEx2=new RegExp("^("+KAT.model.nameRegExS+")\\.("+KAT.model.nameRegExS+")$"),KAT.model.nameRegEx3=new RegExp("^("+KAT.model.nameRegExS+")\\.("+KAT.model.nameRegExS+")\\.("+KAT.model.nameRegExS+")$"),KAT.model.nameNormaliser=function(a){return a},KAT.model.ParsingError=function(a,b){var c=Error.apply(this,[a]);return c.name=this.name="KAT.model.ParsingError",c.node=this.node=b,b instanceof jQuery&&(c.node=this.node=b.toArray()),this.message=c.message,Object.defineProperty(this,"stack",{get:function(){return c.stack}}),this},function(){var a=function(){};a.prototype=Error.prototype,KAT.model.ParsingError.prototype=new a}(),KAT.model.KAnnSpecCollection=function(){this.KAnnSpecs=[]},KAT.model.KAnnSpecCollection.prototype.addKAnnSpec=function(a){return this.getKAnnSpec(a.name)?!1:(this.KAnnSpecs.push(a),a)},KAT.model.KAnnSpecCollection.prototype.addNewKAnnSpec=function(a,b){return this.addKAnnSpec(new KAT.model.KAnnSpec(a,b,this))},KAT.model.KAnnSpecCollection.prototype.init=function(){return $.each(this.KAnnSpecs,function(a,b){$.each(b.concepts,function(a,b){$.each(b.fields,function(){if(this.type==KAT.model.Field.types.reference)for(var a=0;a<this.validation.length;a++){var b=this.validation[a];b instanceof KAT.model.Concept&&(b=b.getFullName());var c=this.concept.KAnnSpec.getConcept(b);if(c||(c=this.concept.KAnnSpec.collection.getConcept(b)),!c)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Concept not found: '"+b+"'). ",this.xml);this.validation[a]=c}}.bind(b))}.bind(b))}),this},KAT.model.KAnnSpecCollection.prototype.getKAnnSpec=function(a){if(a=KAT.model.nameNormaliser(a),!KAT.model.nameRegEx.test(a))return!1;for(var b=0;b<this.KAnnSpecs.length;b++)if(this.KAnnSpecs[b].name==a)return this.KAnnSpecs[b];return!1},KAT.model.KAnnSpecCollection.prototype.getConcept=function(a){if(a=KAT.model.nameNormaliser(a),!KAT.model.nameRegEx2.test(a))return!1;a=a.match(KAT.model.nameRegEx2);var b=this.getKAnnSpec(a[1]);return b?b.getConcept(a[2]):!1},KAT.model.KAnnSpecCollection.prototype.findConcepts=function(){for(var a=[],b=0;b<this.KAnnSpecs.length;b++)for(var c=0;c<this.KAnnSpecs[b].concepts.length;c++)a.push(this.KAnnSpecs[b].concepts[c]);return a},KAT.model.KAnnSpecCollection.prototype.getField=function(a){if(a=KAT.model.nameNormaliser(a),!KAT.model.nameRegEx3.test(a))return!1;a=a.match(KAT.model.nameRegEx3);var b=this.getKAnnSpec(a[1]);if(!b)return!1;var c=b.getConcept(a[2]);return c?c.getField(a[3]):!1},KAT.model.KAnnSpec=function(a,b,c){try{this.xml=jQuery(a)}catch(d){throw new KAT.model.ParsingError("KAT.model.KAnnSpec: Invalid XML (Unable to parse XML). ",this.xml)}if(1!=this.xml.children().length||!this.xml.children().eq(0).is("annotation"))throw new KAT.model.ParsingError("KAT.model.KAnnSpec: Invalid XML (Expected exactly one top-level <annotation>). ",this.xml);if(this.url=KAT.storage.resolve(b),this.name=KAT.model.nameNormaliser(this.xml.children().eq(0).attr("name")),this.rdf_nodeid="KAT_"+(new Date).getTime()+"_"+this.name,!this.name||!KAT.model.nameRegEx.test(this.name))throw new KAT.model.ParsingError("KAT.model.KAnnSpec: Unable to create KAnnSpec ('"+this.name+"' is not a valid name). ",this.xml);var e=this.xml.children().eq(0);if(e.children().length<=1||!e.children().eq(0).is("documentation"))throw new KAT.model.ParsingError("KAT.model.KAnnSpec: Invalid XML for KAnnSpec '"+this.getFullName()+"' (Expected exactly one <documentation>). ",e);this.collection=c,this.documentation=e.children().eq(0).text().trim(),this.concepts=[],e.children().slice(1).each(function(a,b){if(b=$(b),!b.is("concept"))throw new KAT.model.ParsingError("KAT.model.KAnnSpec: Invalid XML for KAnnSpec '"+this.getFullName()+"' (Expected child tag <concept>). ",b);this.concepts.push(new KAT.model.Concept(b,this))}.bind(this))},KAT.model.KAnnSpec.prototype.getFullName=function(){return this.name},KAT.model.KAnnSpec.prototype.getConcept=function(a){if(a=KAT.model.nameNormaliser(a),!KAT.model.nameRegEx.test(a))return!1;for(var b=0;b<this.concepts.length;b++)if(this.concepts[b].name==a)return this.concepts[b];return!1},KAT.model.KAnnSpec.prototype.getField=function(a){if(a=KAT.model.nameNormaliser(a),!KAT.model.nameRegEx2.test(a))return!1;a=a.match(KAT.model.nameRegEx2);var b=this.getConcept(a[1]);return b?b.getField(a[2]):!1},KAT.model.Concept=function(a,b){try{this.xml=jQuery(a)}catch(c){throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML (Unable to parse XML). ",this.xml)}if(this.KAnnSpec=b,"string"!=typeof this.xml.attr("name"))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid Invalid XML (Missing name attribute for <concept>). ",this.xml);if("string"!=typeof this.xml.attr("rdftype"))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid Invalid XML (Missing rdftype attribute for <concept>). ",this.xml);if(this.name=KAT.model.nameNormaliser(this.xml.attr("name")),!KAT.model.nameRegEx.test(this.name))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML ('"+this.getFullName()+"' is not a valid name). ",this.xml);if(this.KAnnSpec.getConcept(this.name))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML (Concept '"+this.getFullName()+"' already exists). ",this.xml);if(this.rdf_type=KAT.rdf.resolveWithNameSpace(this.xml.attr("rdftype"),this.KAnnSpec.xml),1!=this.xml.length||!this.xml.is("concept"))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Expected exactly one <concept> tag). ",this.xml);this.documentation="",this.fields=[],this.display="";var d=this.xml.children(),e=0;if(d.length<2)throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Expected at least 2 of <documentation>, <field>, <display> and <rdf:rdf>). ",d);d.eq(e).is("documentation")&&(this.documentation=d.eq(e).text().trim(),e++);for(var f=!1;d.eq(e).is("field")&&e<d.length;)f=!0,this.fields.push(new KAT.model.Field(d.eq(e),this)),e++;if(!f)throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Missing at least one declared <field>). ",d);if(!d.eq(e).is("display"))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Missing required <display>). ",d);var g=d.eq(e);if(1!=g.children().length||!g.children().eq(0).is("template"))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Missing <template>). ",g);if(this.display=g.children().html().trim(),e++,e<d.length){if("rdf:RDF"!=d.eq(e).prop("tagName"))throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Expected <rdf:rdf> in final position. ). ",d);this.rdf=d.eq(e).html().trim(),e++}if(e!=d.length)throw new KAT.model.ParsingError("KAT.model.Concept: Invalid XML for concept '"+this.getFullName()+"' (Expected at least 2 of <documentation>, <fields>, <display> and <rdf:RDF>). ",d)},KAT.model.Concept.prototype.getDefault=function(){var a={};return $.each(this.fields,function(b){b.type==KAT.model.Field.types.text?a[b.value]=b["default"]:b.type==KAT.model.Field.types.select?a[b.value]=""===b["default"]?b.validation[0]:b["default"]:b.type==KAT.model.Field.types.reference&&(a[b.value]="")}),a},KAT.model.Concept.prototype.getFullName=function(){return this.KAnnSpec.getFullName()+"."+this.name},KAT.model.Concept.prototype.getField=function(a){if(a=KAT.model.nameNormaliser(a),!KAT.model.nameRegEx.test(a))return!1;for(var b=0;b<this.fields.length;b++)if(this.fields[b].name==a)return this.fields[b];return!1},KAT.model.Field=function(a,b){try{this.xml=jQuery(a)}catch(c){throw new KAT.model.Field("KAT.model.Field: Invalid XML (Unable to parse XML). ",this.xml)}if(this.concept=b,"string"!=typeof this.xml.attr("name"))throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML (Missing name attribute for <field>). ",this.xml);if(this.name=KAT.model.nameNormaliser(this.xml.attr("name")),!KAT.model.nameRegEx.test(this.name))throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML ('"+this.getFullName()+"' is not a valid name). ",this.xml);if(this.concept.getField(this.name))throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML (Field '"+this.getFullName()+"' already exists). ",this.xml);if("string"!=typeof this.xml.attr("type"))throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Missing type attribute for <field>). ",this.xml);if("string"!=typeof this.xml.attr("rdfpred"))throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Missing rdfpred attribute for <field>). ",this.xml);if(!KAT.model.Field.types.hasOwnProperty(this.xml.attr("type")))throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Unknown <field> type). ",this.xml);this.type=KAT.model.Field.types[this.xml.attr("type")],this.rdf_pred=KAT.rdf.resolveWithNameSpace(this.xml.attr("rdfpred"),this.concept.KAnnSpec.xml),this.minimum=1,this.maximum=1,this.value="",this["default"]="",this.documentation="",this.validation=void 0;var d=!1,e=!1,f=!1,g=!1,h=!1;if(this.validation=this.type==KAT.model.Field.types.text?new RegExp(".*"):[],this.xml.children().each(function(a,b){if(b=$(b),b.is("value")){if(d)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Double <value> tag). ",b);d=!0,this.value=b.text()}else if(b.is("number")){if(g)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Double <number> tag). ",b);g=!0;try{this.minimum=parseInt(b.attr("atleast"))}catch(c){throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (atleast property must be a number). ",b)}try{this.maximum=parseInt(b.attr("atmost"))}catch(c){throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (atmost property must be a number). ",b)}}else if(b.is("documentation")){if(h)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Double <documentation> tag). ",b);h=!0,this.documentation=b.text().trim()}else if(b.is("default")&&this.type==KAT.model.Field.types.text){if(e)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Double <default> tag). ",b);e=!0,this["default"]=b.text()}else if(b.is("validation")&&this.type==KAT.model.Field.types.text){if(f)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Double <validation> tag). ",b);f=!0;try{this.validation=new RegExp(b.text())}catch(c){throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Unregonised regular expression). ",b)}}else if(b.is("referencedType")&&this.type==KAT.model.Field.types.reference)this.validation.push(b.text());else if(b.is("option")&&this.type==KAT.model.Field.types.select)this.validation.push(new KAT.model.Option(b,this));else{if(!b.is("defaultoption")||this.type!=KAT.model.Field.types.select)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Unexpected tag '"+b.prop("tagName")+"'). ",b);this.validation.push(new KAT.model.Option(b,this))}}.bind(this)),d||(this.value=this.name),this.type==KAT.model.Field.types.select&&0===this.validation.length)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (KAT.model.Field.types.select must have a non-empty list of options. ). ",c);for(var i=0;i<this.concept.fields.length;i++)if(this.concept.fields[i].value==this.value)throw new KAT.model.ParsingError("KAT.model.Field: Invalid XML for field '"+this.getFullName()+"' (Value '"+this.value+"' already used by field '"+this.concept.fields[i].getFullName()+"'). ",this.xml)},KAT.model.Field.prototype.getFullName=function(){return this.concept.getFullName()+"."+this.name},KAT.model.Field.types={reference:"reference",select:"select",text:"text"},KAT.model.Option=function(a,b){try{this.xml=jQuery(a)}catch(c){throw new KAT.model.ParsingError("KAT.model.Option: Invalid XML (Unable to parse XML). ",this.xml)}if(this.field=b,1!=this.xml.find("value").length)throw new KAT.model.ParsingError("KAT.model.Option: Invalid XML (Expected exactly one <value>. )",this.xml);this.value=this.xml.find("value").text();for(var d=0;d<this.field.validation.length;d++)if(this.field.validation[d].value==this.value)throw new KAT.model.ParsingError("KAT.model.Option: Invalid XML (Value '"+this.value+"' already used). ",this.xml);if(this.xml.is("defaultoption")){if(""!==this.field["default"])throw new KAT.model.ParsingError("KAT.model.Option: Invalid XML (Default already exists)",this.xml);this.field["default"]=this.value}if(this.rdf_obj=!1,"string"==typeof this.xml.attr("rdfobj")&&(this.rdf_obj=KAT.rdf.resolveWithNameSpace(this.xml.attr("rdfobj"),this.field.concept.KAnnSpec.xml)),this.documentation=this.xml.find("documentation").text(),this.xml.children().length>2)throw new KAT.model.ParsingError("KAT.model.Option: Invalid XML (Too many children. )",this.xml)},KAT.gui=function(a,b){b.init(),this.collection=b,this.element=a},KAT.gui.prototype.getSelection=function(){var a=window.getSelection().getRangeAt(0),b=this.element,c=KAT.gui.getXPath(b,a.commonAncestorContainer),d=KAT.gui.getXPath(b,a.startContainer.parentElement),e=KAT.gui.getXPath(b,a.endContainer.parentElement),f={container:c,start:d,startOffset:a.startOffset,end:e,endOffset:a.endOffset,isEmpty:!1};return d==e&&a.startOffset==a.endOffset&&(f.isEmpty=!0),f},KAT.gui.getXPath=function(a,b){var c=$(b).get(0),d=$(a).get(0);if(c.hasAttribute("id"))return"//*[@id='"+c.id+"']";for(var e=[];c&&c!==d;c=c.parentNode){for(var f=0,g=c.previousSibling;g;g=g.previousSibling)g.nodeType!=Node.DOCUMENT_TYPE_NODE&&g.nodeName==c.nodeName&&++f;var h=c.nodeName.toLowerCase(),i=f?"["+(f+1)+"]":"";e.splice(0,0,h+i)}return e.length?"/"+e.join("/"):null},KAT.gui.resolveXPath=function(a,b){var c=b.match(/^\/\/\*\[@id='([^']+)'\]$/);if(c)return document.getElementById(c[1]);for(var d,e,f,g,h=$(a).get(0),i=b.split("/").splice(1),j=function(a){return(a.tagName||a.nodeName).toLowerCase()==e.toLowerCase()},k=0;k<i.length;k++)if(d=i[k],e=d.split("[")[0],f=parseInt((d.split("[")[1]||"1]").split("]")[0])-1,g=h,h=Array.prototype.filter.call(h.children,j)[f],void 0===h)return void console.log("undefined",g,d,e,f);return h},KAT.gui.prototype.getRange=function(a){var b=$(KAT.gui.resolveXPath(this.element,a.container)),c=b.find("*").andSelf(),d=c.index(KAT.gui.resolveXPath(this.element,a.start)),e=$(KAT.gui.resolveXPath(this.element,a.end)),f=c.index(e);return c=c.slice(d,f),c.filter(function(a,b){var d=$(b).children();return d.length==c.filter(d).length}).add(e.find("*").andSelf())},KAT.gui.nodeInRange=function(a,b){var c;if(a.intersectsNode)return a.intersectsNode(b);c=b.ownerDocument.createRange();try{c.selectNode(b)}catch(d){c.selectNodeContents(b)}return-1==a.compareBoundaryPoints(Range.END_TO_START,c)&&1==a.compareBoundaryPoints(Range.START_TO_END,c)},KAT.gui.dialog=function(a,b,c,d){var e={},f=$([]);$.each(c,function(a){f=f.add($("<button class='btn btn-"+(0===a?"primary":"default")+"'>").text(c[a]).click(function(){d.call(e,c[a],a)}))}),f=$(f.get().reverse());var g=$('<h4 class="modal-title"></h4>').text(a),h=$("<p>").text(b),i=$('<div class="modal hide large">').append($('<div class="modal-dialog">').append($('<div class="modal-content">').append($('<div class="modal-header>').append($('<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>').click(function(){return d.call(e,"",-1),!1}),g),$('<div class="modal-body">').append(h),$('<div class="modal-footer">').append(f))));return i.appendTo($("<div>").BS().appendTo("body")).modal().on("hidden",function(){JOBAD.UI.BSStyle()}),JOBAD.UI.BSStyle(),e={$dialog:i,$title:g,$content:h,$buttons:f,close:function(){i.one("hidden.bs.modal",function(){i.remove()}).modal("hide")}}},KAT.gui.selectDialog=function(a,b,c,d,e){var f,g=0;if("function"==typeof d&&"undefined"==typeof e&&(e=d,d=function(){return""}),Array.isArray(d)){var h=d;d=function(a,b){return h[b]}}$self=KAT.gui.dialog(a,b,["OK","Cancel"],function(a,b){$self.close(),0===b?e.call($self,c[g],g):e.call($self,"",-1)});var i=$("<span>"),j=$("<span style='margin-left: 10px; '>"),k=$('<ul class="dropdown-menu" role="menu">'),l=$("<div class='dropdown'>").append($('<button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">').append(i,'<span class="caret"></span>'),k,j);return $.each(c,function(a,b){k.append($('<li role="presentation">').append($('<a role="menuitem" tabindex="-1" href="#">').text(b).click(function(){g=a,f()})))}),$self.$content.empty().append($("<h3>").text(b),l),f=function(){i.text(c[g]),j.text(d(c[g],g))},f(),$self},KAT.sidebar={},KAT.sidebar.init=function(){var a,b=jQuery(window).height();a=KAT.sidebar.annotationMode?"Reading":"Annotation";var c=jQuery("<div>").addClass("collapsible").append($("<div>").addClass("KATTitle").html("<h3>KWARC Annotation Tool</h3>")).append($("<div>").addClass("KATSidebarButtons").append($("<button>").text("Enable "+a+" Mode").addClass("annotationToggle").click(function(){KAT.sidebar.toggleAnnotationMode()})).append($("<button>").text("Import Annotations").addClass("helpButton").click(function(){KAT.sidebar.toggleAnnotationMode()})).append($("<button>").text("Export Annotations").addClass("helpButton").click(function(){KAT.sidebar.toggleAnnotationMode()})).append($("<button>").append($("<span>").addClass("glyphicon glyphicon-info-sign").text("Help")).addClass("helpButton").click(function(){alert("Unimplemented!")}))).append($("<ul>").addClass("KATMenuItems")).css({position:"fixed",right:KAT.sidebar.hideWidth,height:b-10}).prependTo("body"),d=$("<button>").text("«").addClass("collapseToggle").css({height:b-10}).click(KAT.sidebar.toggleSidebar).prependTo(c);KAT.sidebar.showSidebar(),jQuery(window).resize(function(){b=jQuery(window).height(),c.css({position:"fixed",right:KAT.sidebar.hideWidth,height:b-10}),d.css({height:b-10})})},KAT.sidebar.showSidebar=function(){KAT.sidebar.extended=!0,jQuery(".collapseToggle").text("»").parent().animate({right:"0"},KAT.sidebar.animateLength)},KAT.sidebar.hideSidebar=function(){KAT.sidebar.extended=!1,jQuery(".collapseToggle").text("«").parent().animate({right:KAT.sidebar.hideWidth},KAT.sidebar.animateLength)},KAT.sidebar.toggleSidebar=function(){KAT.sidebar.extended?KAT.sidebar.hideSidebar():KAT.sidebar.showSidebar()},KAT.sidebar.toggleAnnotationMode=function(){KAT.sidebar.annotationMode=!KAT.sidebar.annotationMode;var a;KAT.sidebar.annotationMode?(a="Reading",KAT.sidebar.showSidebar()):a="Annotation",$(".annotationToggle").text("Enable "+a+" Mode")},KAT.sidebar.generateAnnotationForm=function(a,b,c,d,e){function f(a,b,c){return $("<button type='button'>").text(b).addClass("formButton").appendTo(k).click(c)}function g(a,b,d,e){function f(){var a=e.validation;$(".currentForm").removeClass("has-success has-error"),$(".save").removeAttr("disabled"),console.log(g.val()),a.test(g.val())?$(".currentForm").addClass("has-success"):($(".currentForm").addClass("has-error"),$(".save").attr("disabled","disabled"))}var g=jQuery("<input type='text'>").addClass("tfield").addClass("form-control").appendTo(a).keyup(f);if("undefined"!=typeof c){var h=b[d];g.val(h[0])}return g}function h(a,b){var d=jQuery("<select>").addClass("tfield").appendTo(a);if($.each(b,function(a,b){jQuery("<option>").text(b.value).val(a).appendTo(d)}),"undefined"!=typeof c)for(var e=i[value],f=0;f<b.length;f++)b[f].value===e[0].value&&d.val(f);return d}KAT.sidebar.extended||KAT.sidebar.toggleSidebar();var i,j;"undefined"==typeof c?j="Enter":(j="Edit",i=c.values);var k=$("<li>").addClass("currentForm").append("<b> "+j+" Annotation Details</b><br>").appendTo(".KATMenuItems"),l=jQuery.map(e.fields,function(b){var c,d=b.validation,e=b.value;k.append("<br>").append(jQuery("<label>").text(e));var f;if(b.type===KAT.model.Field.types.text?c=g(k,i,e,b):b.type===KAT.model.Field.types.select&&(c=h(k,d)),b.type===KAT.model.Field.types.reference){c=jQuery("<select>").addClass("tfield").appendTo(k);var j=a.store.filterByConcept.apply(a.store,d);jQuery.each(j,function(a,b){$("<option>").text(b.uuid).val(b.uuid).appendTo(c)}),i&&(f=i[e],c.val(f[0].uuid))}return c});f(k,"Save",function(){var f={};$.each(e.fields,function(b,c){var d=l[b];f[c.value]=c.type==KAT.model.Field.types.reference?[a.store.find(d.val())]:c.type==KAT.model.Field.types.select?[c.validation[d.val()]]:[d.val()]}),k.remove();var g=b(d,e,f,c);g.draw()}).addClass("save"),f(k,"Cancel",function(){k.remove()})},KAT.sidebar.extended=!1,KAT.sidebar.annotationMode=!1,KAT.sidebar.hideWidth=-230,KAT.sidebar.animateLength=100,KAT.storage={},KAT.storage.resolve=function(a,b,c){var d,e,f,g=!1;"string"==typeof b&&(g=!0,d=arguments.callee(b,!0),e=jQuery("base").detach(),f=jQuery("<base>").attr("href",d).appendTo("head"));var h=document.createElement("div");h.innerHTML='<a href="'+jQuery("<span/>").text(a).html()+'">x</a>';var i=h.firstChild.href;return g&&(f.remove(),e.appendTo("head")),b!==!0&&c!==!0||"/"==i[i.length-1]||(i+="/"),i},KAT.storage.Store=function(a,b){this.collection=a.collection,this.gui=a,this.docURL=KAT.storage.resolve(b),this.annotations=[]},KAT.storage.Store.prototype.addNew=function(a,b,c){var d=new KAT.storage.Annotation(this,a,b,c);return this.annotations.push(d),d},KAT.storage.Store.prototype.addFromJSON=function(a){var b=new KAT.storage.Annotation(this,KAT.storage.Store.UUID2Selection(a.uuid),this.collection.getConcept(a.concept));return b.values=a.values,this.annotations.push(b),b},KAT.storage.Store.prototype.filterByConcept=function(){var a=[],b=jQuery.makeArray(arguments),c=0===b.length;return jQuery.each(this.annotations,function(d,e){(c||-1!=b.indexOf(e.concept.name))&&a.push(e)}),a},KAT.storage.Store.prototype.find=function(a){for(var b=0;b<this.annotations.length;b++)if(this.annotations[b].uuid==a)return this.annotations[b];return void 0},KAT.storage.Store.prototype.findfromElement=function(a){for(var b=$(a).parentsUntil(this.element).andSelf().add(this.element),c=[],d=[],e=b.length-1;e>=0;e--)for(var f=b.eq(e).data("KAT.Annotation.UUID")||[],g=0;g<f.length;g++)-1==c.indexOf(f[g])&&(c.push(f[g]),d.push(this.find(f[g])));return d},KAT.storage.Store.prototype.updateReferences=function(){var a=this;jQuery.map(this.annotations,function(b){jQuery.map(b.concept.fields,function(c){c.type===KAT.model.Field.types.reference&&jQuery.map(b.values[c.value],function(d,e){"string"==typeof d&&(b.values[c.value][e]=a.find(d))})})})},KAT.storage.Store.prototype.toRDF=function(){var a=this,b=$(KAT.rdf.create("rdf:RDF")).attr("xmlns:kat",KAT.rdf.kat_namespace).attr("xmlns:rdf",KAT.rdf.rdf_namespace),c="kat_run";b.append($(KAT.rdf.create("rdf:Description")).append(KAT.rdf.attr($(KAT.rdf.create("kat:annotation")),"rdf:nodeID",c)),KAT.rdf.attr($(KAT.rdf.create("rdf:Description")),"rdf:nodeID",c).append(KAT.rdf.attr($(KAT.rdf.create("rdf:type")),"rdf:resource","kat:run"),KAT.rdf.attr($("<kat:date />").text((new Date).toISOString()),"rdf:datatype","xs:dateTime"),$("<kat:tool>").text("KAT"),$("<kat:runid>").text("0")));var d={};jQuery.each(this.annotations,function(e,f){var g=f.concept.KAnnSpec;d[g.rdf_nodeid]||(d[g.rdf_nodeid]=!0,g.xml.find("annotation").each(function(){$.each(this.attributes,function(a,c){var d=c.name,e=c.value;d.startsWith("xmlns:")&&b.attr(d,e)})}),b.append($(KAT.rdf.create("rdf:Description")).append(KAT.rdf.attr($(KAT.rdf.create("kat:annotation")),"rdf:nodeID",g.rdf_nodeid)),KAT.rdf.attr($(KAT.rdf.create("rdf:Description")),"rdf:nodeID",g.rdf_nodeid).append(KAT.rdf.attr($("<rdf:type>"),"rdf:resource","kat:kannspec"),$("<kat:kannspec-name>").text(g.name),$("<kat:kannspec-URI>").text(g.url)))),b.append($(f.toRDF(a.docURL,c)).children())});var e=b.get(0).outerHTML;return console.log(e),e},KAT.storage.Store.prototype.addFromRDF=function(a){var b=this,c=jQuery(a),d=jQuery("rdf\\:Description",c).has("kat\\:annotates").map(function(){var a=KAT.storage.Annotation.fromRDF(c,jQuery(this).attr("rdf:nodeId"),b);return b.annotations.push(a),a}).toArray();return this.updateReferences(),d},KAT.storage.Store.Selection2UUID=function(a){return"cse("+a.container+","+a.start+","+a.end+")"},KAT.storage.Store.UUID2Selection=function(a){var b="cse(",c=")",d=a.substring(0,b.length),e=a.substring(a.length-c.length);return d!==b||e!==c?!1:(a=a.substring(b.length,a.length-c.length),a=a.split(","),3!==a.length?!1:{container:a[0],start:a[1],end:a[2],startOffset:0,endOffset:0})},KAT.storage.Annotation=function(a,b,c,d,e){this.store=a;var f=e||"KAT_"+(new Date).getTime()+"_"+Math.floor(1e4*Math.random());if(this.store.find(f))throw new Error("Annotation with given uuid already exists. ");this.uuid=f,this.selection=b,this.concept=c,d="undefined"!=typeof d?d:c.getDefault(),this.values=d},KAT.storage.Annotation.prototype["delete"]=function(){this.undraw();for(var a=0;a<this.store.annotations.length;a++)if(this.store.annotations[a].uuid==this.uuid){this.store.annotations.splice(a,1);break}},KAT.storage.Annotation.prototype.draw=function(){function a(a){for(var b,c=[],d=/{([^}]+)}/g;(b=d.exec(a))?!0:!1;)c.push(b[1]);return c}var b=this,c=this.store.gui.getRange(this.selection);c.addClass("KAT-selection").each(function(){var c=$(this),d=c.data("KAT.Annotation.UUID")||[];d.push(b.uuid);var e=a(b.concept.display),f=document.createElement("div");f.innerHTML=b.concept.display;var g,h=f.textContent||f.innerText||"",i=function(a){return a[0].toUpperCase()+a.slice(1).toLowerCase()};$.each(e,function(a,c){switch(b.concept.fields[a].type){case KAT.model.Field.types.reference:console.log("reference: ");break;case KAT.model.Field.types.select:g=b.values[c][0].value||"",h=h.replace("{"+e[a]+"}",g);break;default:g=b.values[c]||b.values[i(c)]||"",h=h.replace("{"+e[a]+"}",g)}}),c.attr("title",h),c.data("KAT.Annotation.UUID",d)}),$(document).tooltip()},KAT.storage.Annotation.fromRDF=function(a,b,c){var d,e=jQuery(a),f=function(a,b){var c=KAT.rdf.buildNameSpace(a,e.get(0));return b?c.replace(new RegExp(":","g"),"\\:"):c},g=KAT.rdf.findById(e,b),h=g.find("kat\\:annotates").attr("rdf:resource");if(h.substring(0,c.docURL.length+1)!=c.docURL+"#"){if(-1==h.indexOf("#"))throw new Error("Malformed RDF: Unable to parse selection URL. ");console.log("Currently loaded document does not match RDF annotation, loading it anyways ... "),d=decodeURIComponent(h.indexOf("#")+1)}else d=decodeURIComponent(h.substring(c.docURL.length+1));var i=KAT.storage.Store.UUID2Selection(d),j=KAT.rdf.findById(e,g.find("kat\\:kannspec").attr("rdf:nodeID"));if(1!==j.length)throw new Error("Malformed RDF: Unable to find KAnnSpec. ");var k=j.find("kat\\:kannspec-uri").text(),l=j.find("kat\\:kannspec-name").text();if(!l)throw new Error("Malformed RDF: Missing <kat:kannspec-name>");var m=c.collection.getKAnnSpec(l);if(!m)throw new Error("KAnnSpec '"+l+"' not loaded. ");k&&k===m.url||console.warn("Warning: KAnnSpec URL does not match. "),m.rdf_nodeid=g.find("kat\\:kannspec").attr("rdf:nodeID");var n=g.find("kat\\:concept").text();if(!n)throw new Exception("Malformed RDF: Missing <kat:concept>");var o=m.getConcept(n);if(!o)throw new Error("Concept '"+n+"' not found inside '"+l+"'");var p={};jQuery.each(o.fields,function(a,b){var c=[];b.type==KAT.model.Field.types.text?g.find(f(b.rdf_pred,!0)).each(function(){c.push(jQuery(this).text())}):b.type==KAT.model.Field.types.reference?g.find(f(b.rdf_pred,!0)).each(function(){c.push(jQuery(this).attr("rdf:nodeID"))}):b.type==KAT.model.Field.types.select&&g.find(f(b.rdf_pred,!0)).each(function(){for(var a=jQuery(this).attr("rdf:resource"),d=0;d<b.validation.length;d++)if(b.validation[d].rdf_obj===a||b.validation[d].value===a)return void c.push(b.validation[d]);throw new Error("Option '"+a+"' not found inside '"+l+"'")}),p[b.value]=c});var q=new KAT.storage.Annotation(c,i,o,p,b);return q},KAT.storage.Annotation.prototype.flash=function(){this.store.gui.getRange(this.selection).stop().animate({backgroundColor:"red"},1500,function(){$(this).css("background-color","")})},KAT.storage.Annotation.prototype.edit=function(a){KAT.sidebar.generateAnnotationForm(a,function(a,b,c,d){return d.values=c,d.undraw(),d.draw(),d.flash(),d},this,this.selection,this.concept)},KAT.storage.Annotation.prototype.undraw=function(){var a=this,b=this.store.gui.getRange(this.selection);b.removeClass("KAT-selection").each(function(){var b=$(this),c=$(this).data("KAT.Annotation.UUID")||[],d=c.indexOf(a.uuid);~d&&(c.splice(d,1),b.data("KAT.Annotation.UUID",c))})},KAT.storage.Annotation.prototype.toRDF=function(a,b){var c=this,d=this.concept,e=a+"#"+encodeURIComponent(KAT.storage.Store.Selection2UUID(this.selection)),f=$(KAT.rdf.create("rdf:RDF")),g=KAT.rdf.attr($(KAT.rdf.create("rdf:Description")),"rdf:nodeID",this.uuid).appendTo(f).append(KAT.rdf.attr($(KAT.rdf.create("kat:run")),"rdf:nodeID",b),KAT.rdf.attr($(KAT.rdf.create("kat:kannspec")),"rdf:nodeID",d.KAnnSpec.rdf_nodeid),$(KAT.rdf.create("kat:concept")).text(d.name),KAT.rdf.attr($(KAT.rdf.create("kat:type")),"rdf:resource",d.rdf_type),KAT.rdf.attr($(KAT.rdf.create("kat:annotates")),"rdf:resource",e));return jQuery.each(d.fields,function(a,b){var e=c.values[b.value],f=jQuery.isArray(e)?e:[e];jQuery.each(f,function(a,c){var e=$(KAT.rdf.create(KAT.rdf.buildNameSpace(b.rdf_pred,d.KAnnSpec.xml))).appendTo(g);b.type==KAT.model.Field.types.text?e.text(c):b.type==KAT.model.Field.types.reference?KAT.rdf.attr(e,"rdf:nodeID",c.uuid):b.type==KAT.model.Field.types.select&&KAT.rdf.attr(e,"rdf:resource",c.rdf_obj?c.rdf_obj:c.value)})}),f.get(0)},KAT.module={info:{identifier:"KAT.module",title:"KAT module",author:"The KWARC group",description:"A module for KAT",url:"http://kwarc.github.io/KAT",version:"2.0",dependencies:[],externals:{js:[],css:[]},async:!1,hasCleanNamespace:!1},init:function(a,b){this.store=b,this.gui=this.store.gui},hoverText:function(){},contextMenuEntries:function(a){var b=this,c="Delete Annotation",d="Highlight Annotation",e="Edit Annotation",f="Enable Annotation Mode",g="Enable Reading Mode",h="Import Annotations",i="Export Annotations",j={},k=function(a){var c=function(){for(var a=prompt("Paste annotations to import here: "),c=b.store.addFromRDF(jQuery(a).get(0)),d=0;d<c.length;d++)c[d].draw()},d=function(){{var a=b.store.toRDF();KAT.gui.dialog("Export Annotation",a,["OK"],function(){this.close()})}};a?j[g]=function(){KAT.sidebar.toggleAnnotationMode()}:j[f]=function(){KAT.sidebar.toggleAnnotationMode()},j[h]=c,j[i]=d};if(KAT.sidebar.annotationMode){var l;try{l=this.gui.getSelection()}catch(m){}if(!l||l.isEmpty){k(!0);var n=this.store.findfromElement(a);0!==n.length&&(j={},j[c]={},j[d]={},j[e]={},$.each(n,function(a,f){j[c][f.uuid]=function(){f["delete"]()},j[d][f.uuid]=function(){
f.flash()},j[e][f.uuid]=function(){f.edit(b)}}))}else(l.start!=l.end||l.startOffset!=l.endOffset)&&$.each(this.gui.collection.findConcepts(),function(a,c){j[c.getFullName()]=function(){KAT.sidebar.generateAnnotationForm(b,b.store.addNew.bind(b.store),void 0,l,c)}})}else k(!1);return j}},JOBAD.modules.register(KAT.module);
//# sourceMappingURL=KAT.min.js.map