<?xml version="1.0" encoding="UTF-8" ?>
<!-- A KAT annotations specification for OMDoc annotations
copyright 2013 Michael Kohlhase released under the GPL
$Id: omdoc-annotations.xml 664 2013-08-15 06:38:19Z kohlhase $
$HeadURL: https://svn.kwarc.info/repos/lamapun/projects/kat/omdoc-annotations.xml $
-->
<annotation name="OMDoc"
	xmlns="https://github.com/KWARC/KAT/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:o="http://omdoc.org/KAnnSpec#">
	<documentation>
		The OMDoc KAnnSpec is a flexiformal data model for mathematical (and general STEM) documents
	</documentation>
	<concept name="Symbol" rdftype="o:Symbol">
		<documentation>An OpenMath/OMDoc Symbol</documentation>
		<field name="name" type="text" rdfpred="o:symbolname">
			<documentation>The name of the symbol defines it in a theory</documentation>
			<value>Name</value>
			<default>Symbol</default>
			<validation>[A-Z][A-Za-z]*</validation>
			<number atleast="1" atmost="3"/>
		</field>
		<display>
			<template>
				<b>Symbol:</b> <br/> {name}
			</template>
		</display>
	</concept>

	<concept name="Definition" rdftype="o:GeneralDefinition">
		<field name="for" type="reference" rdfpred="o:defines">
			<value>For</value>
			<referencedType>Symbol</referencedType>
			<number atleast="1" atmost="10"/>
		</field>
		<field name="type" type="select" rdfpred="o:definitiontype">
			<defaultoption rdfobj="o:simpledef">
				<value>simple</value>
				<documentation>definiens does not contain the definiendum</documentation>
			</defaultoption>
			<option rdfobj="o:patterndef">
				<documentation>definiendum applied to formal variables</documentation>
				<value>pattern</value>
			</option>
			<option rdfobj="o:recursivedef">
				<documentation>definiens may contain definiendum</documentation>
				<value>recursive</value>
			</option>
			<option rdfobj="o:implicitdef">
				<value>implicit</value>
				<documentation>definiendum is described unambiguously by a formula</documentation>
			</option>
		</field>
		<display>
			<template>
				<b>Definition</b> <br/> {for} <br/> {type}
			</template>
		</display>
	</concept>

	<concept name="assertion" rdftype="o:Assertion">
		<field name="type" type="select" rdfpred="o:assertiontype">
			<option>
				<value>theorem</value>
				<documentation>An important assertion with a proof</documentation>
			</option>
			<option>
				<value>lemma</value>
				<documentation>A less important assertion with a proof</documentation>
			</option>
			<option>
				<value>corollary</value>
				<documentation>An assertion that is directly entailed by
					another.</documentation>
				</option>
				<option>
					<value>conjecture</value>
					<documentation>An assertion whose validity (provability) has not been decided.</documentation>
				</option>
				<option>
					<value>false-conjecture</value>
					<documentation>A conjecture that has been refuted since it was postulated.</documentation>
				</option>
				<option>
					<value>obligation</value>
					<documentation>An assertion on which the validity or well-formedness of another statement depends.</documentation>
				</option>
				<option>
					<value>assumption</value>
					<documentation>A statement that we assume to be true (without being able/willing) to prove it.</documentation>
				</option>
				<defaultoption>
					<value>formula</value>
					<documentation>If all else fails.</documentation>
				</defaultoption>
			</field>
			<display>
				<template>
					<b>Assertion:</b> <br/> {type}
				</template>
			</display>
		</concept>

		<concept name="Declaration" rdftype="o:Declaration">
			<documentation>A declaration of an identifier</documentation>
			<field name="type" type="select" rdfpred="o:declaration-type">
				<option>
					<value>constant</value>
					<documentation>A constant declaration</documentation>
				</option>
				<option>
					<value>universal variable</value>
					<documentation>A universal variable that can be instantiated.</documentation>
				</option>
				<option>
					<value>existential variable</value>
					<documentation>An existential variable, which introduces a name for an object that is claimed to exist.</documentation>
				</option>
				<number atleast="1" atmost="5" />
			</field>
			<field name="identifier" type="reference" rdfpred="o:identifier">
				<documentation>The identifiers introduced by this declaration</documentation>
				<value>Identifiers</value>
				<number atleast="1"/>
			</field>
			<field name="restriction" type="reference" rdfpred="o:restriction">
				<documentation>The property assumed for the identifiers declared</documentation>
				<value>Restriction</value>
				<number atleast="1" atmost="4"/>
			</field>
			<display>
				<template><bf>Declaration</bf> of {identifier} with restriction {restriction}</template>
			</display>
		</concept>

		<concept name="Reference" rdftype="o:Reference">
			<field name="declaration" type="reference" rdfpred="o:references">
				<value>Declaration</value>
				<referencedType>Declaration</referencedType>
				<number atleast="1" atmost="1"/>
			</field>
			<display>
				<template><b>Reference</b> to {declaration}</template>
			</display>
		</concept>


		<concept name="inline-statement" rdftype="o:inline-statement">
			<documentation>A phrase-level statement</documentation>
			<field name="type" type="select" rdfpred="o:statement-type">
				<option rdfobj="o:Example">
					<value>Example</value>
					<documentation>An inline example</documentation>
				</option>
				<option rdfobj="o:Definition">
					<value>Definition</value>
					<documentation>An inline definition</documentation>
				</option>
				<option rdfobj="o:Statement">
					<value>Statement</value>
					<documentation>An inline Statement</documentation>
				</option>
				<number atleast="1" atmost="1"/>
			</field>
			<display>
				<template>
					<b>Inline-{type}</b>
				</template>
			</display>
		</concept>

		<concept name="Proof" rdftype="o:Proof">
			<field name="name" type="text" rdfpred="o:proofname">
				<value>Name</value>
				<default>Proof</default>
				<validation>[A-Z][A-Za-z]*</validation>
				<number atleast="1" atmost="1"/>
			</field>
			<field name="for" type="reference" rdfpred="o:proves">
				<value>For</value>
				<number atleast="1" atmost="1"/>
				<referencedType>assertion</referencedType>
				<referencedType>inline-statement</referencedType>
			</field>
			<display>
				<template>
					<b>Proof:</b> <br/> {name} <br/> for {for}
				</template>
			</display>
		</concept>

		<concept name="Theory" rdftype="o:Theory">
			<field name="name" type="text" rdfpred="o:name">
				<value>Name</value>
				<default>Proof</default>
				<validation>[A-Z][A-Za-z]*</validation>
				<number atleast="1" atmost="1"/>
			</field>
			<!-- **** this is not clear yet, imports can be outside as well **** -->
			<field name="imports" type="reference" rdfpred="o:imports">
				<value>imports</value>
				<number/>
			</field>
			<display>
				<template>
					<b>Theory</b> {name} <br/> (imports {imports})
				</template>
			</display>
		</concept>

		<concept name="view" rdftype="o:View">
			<field name="name" type="text" rdfpred="o:name">
				<value>Name</value>
				<validation>[A-Z][A-Za-z]*</validation>
				<number atleast="1" atmost="1"/>
			</field>
			<field name="from" type="reference" rdfpred="o:source">
				<value>From</value>
				<number atleast="1" atmost="1"/>
				<referencedType>Theory</referencedType>
			</field>
			<field name="to" type="reference" rdfpred="o:target">
				<value>To</value>
				<number atleast="1" atmost="1"/>
				<referencedType>Theory</referencedType>
			</field>
			<display>
				<template>
					<b>view</b> {name} from {from} to {to}
				</template>
			</display>
		</concept>
	</annotation>
